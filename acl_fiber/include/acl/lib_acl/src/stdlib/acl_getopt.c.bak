
#include "stdlib/acl_define.h"
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#ifdef ACL_BCB_COMPILER
#pragma hdrstop
#endif

#include "stdlib/acl_getopt.h"

#define ERR(s, c) \
	if (acl_opterr) { \
		char errbuf[2]; \
		errbuf[0] = c; errbuf[1] = '\n'; \
		(void) printf("%s", argv[0]); \
		(void) printf("%s", s); \
		(void) printf("%s", errbuf); \
	}

int   acl_opterr;
int   acl_optind;
int   acl_optopt;
char *acl_optarg;

static int sp = 1;
static int call_first = 1;

void acl_getopt_init(void)
{
	acl_opterr = 1;
	acl_optind = 1;
	call_first = 0;

	sp = 1;
}

int acl_getopt(int argc, char **argv, char *opts)
{
	register int c;
	register char *cp;

	if (call_first)
		acl_getopt_init();

	if(sp == 1) {
		if(acl_optind >= argc || argv[acl_optind][0] != '-' || argv[acl_optind][1] == '\0')
			return(-1);
		else if(strcmp(argv[acl_optind], "--") == 0) {
			acl_optind++;
			return(-1);
		}
	}
	acl_optopt = c = argv[acl_optind][sp];
	if (c == ':') {
		ERR(": illegal option -- ", c);
		if (argv[acl_optind][++sp] == '\0') {
			acl_optind++;
			sp = 1;
		}
		return('?');

	}

	if ((cp = strchr(opts, c)) == NULL) {
		if (argv[acl_optind][++sp] == '\0') {
			acl_optind++;
			sp = 1;
		}
		return('?');
	}

	if(*++cp == ':') {
		if(argv[acl_optind][sp+1] != '\0')
			acl_optarg = &argv[acl_optind++][sp+1];
		else if(++acl_optind >= argc) {
			ERR(": option requires an argument -- ", c);
			sp = 1;
			return('?');
		} else
			acl_optarg = argv[acl_optind++];
		sp = 1;
	} else {
		if(argv[acl_optind][++sp] == '\0') {
			sp = 1;
			acl_optind++;
		}
		acl_optarg = NULL;
	}
	return(c);
}
